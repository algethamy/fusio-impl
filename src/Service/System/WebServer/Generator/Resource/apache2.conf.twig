{% import _self as self %}
<VirtualHost *:{{ host.port }}>
{% if host.sslForce %}
    ServerName "{{ host.serverName }}"
{% for alias in host.alias %}
    ServerAlias "{{ alias }}"
{% endfor %}
    DocumentRoot "{{ host.documentRoot }}"
    Redirect permanent / https://{{ host.serverName }}/
{% else %}
{{ self.render_host(host) }}
{% endif %}
</VirtualHost>
{% if host.sslCertificate and host.sslCertificateKey %}

<VirtualHost *:{{ host.sslPort }}>
{{ self.render_host(host) }}

    SSLEngine on
    SSLCertificateFile "{{ host.sslCertificate }}"
    SSLCertificateKeyFile "{{ host.sslCertificateKey }}"
</VirtualHost>
{% endif %}
{% macro render_host(host) %}
    ServerName "{{ host.serverName }}"
{% for alias in host.alias %}
    ServerAlias "{{ alias }}"
{% endfor %}
    DocumentRoot "{{ host.documentRoot }}"

    <Directory "{{ host.documentRoot }}">
        Options FollowSymLinks
        AllowOverride None
        Require all granted
{% if host.index %}
        DirectoryIndex "/{{ host.index }}"
        FallbackResource "/{{ host.index }}"
{% endif %}
{% if host.handler == 'api' %}
        RewriteEngine On
        RewriteCond %{HTTP:Authorization} ^(.*)
        RewriteRule .* - [e=HTTP_AUTHORIZATION:%1]
{% endif %}
    </Directory>

    {% if host.errorLog %}ErrorLog "{{ host.errorLog }}"
{% endif %}
    {% if host.accessLog %}CustomLog "{{ host.accessLog }}" combined{% endif %}
{% endmacro %}